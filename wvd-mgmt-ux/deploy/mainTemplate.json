{
    "$schema": "http://schemas.microsoft.org/azure/deploymentTemplate?api-version=2015-01-01-preview#",
    "contentVersion": "1.0",
    "parameters": {
        "AzureADUserPrincipalNameOrApplicationId": {
            "type": "String",
            "metadata": {
                "description": "The template will fail if you enter a user account that requires MFA or an application that is secured by a certificate. The UPN or ApplicationId must be an RDS Owner or RDS Contributor in the Windows Virtual Desktop Tenant and Contributor in the azure Subscription."
            }
        },
        "AzureAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the azure admin UPN or ApplicationId."
            }
        },
        "isServicePrincipal": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "The boolean value indicating if the credentials are for a service principal."
            }
        },
        "ApplicationName": {
            "type": "String",
            "metadata": {
                "description": "Enter a unique name--without spaces--for your management UX app. This will be used to generate a unique DNS name for the public IP address of the web app and will be used for the app registration in Azure AD."
            }
        },
        "_artifactsLocation": {
            "defaultValue": "https://raw.githubusercontent.com/Azure/RDS-Templates/wvd-mgmt-ux-0819/wvd-templates/wvd-management-ux/deploy/",
            "type": "String",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located."
            }
        },
        "_artifactsLocationSasToken": {
            "defaultValue": "",
            "type": "SecureString",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation when they're located in a storage account with private access."
            }
        }
    },
    "variables": {
        "rdBrokerURL": "https://rdbroker.wvd.microsoft.com",
        "resourceURL": "https://mrs-prod.ame.gbl/mrs-RDInfra-prod",
        "webAPIAppName": "[concat(parameters('ApplicationName'),'-API')]",
        "hostingPlanName": "[concat(parameters('ApplicationName'),'-SPlan')]",
        "serviceplansku": "S1",
        "workerSize": "0",
        "sku": "Free",
        "webApiPackageURL": "[concat(parameters('_artifactsLocation'),'msft-wvd-saas-api.zip')]",
        "webApplicationPackageURL": "[concat(parameters('_artifactsLocation'),'msft-wvd-saas-web.zip')]",
        "uniquestr": "[uniqueString(resourceGroup().id, deployment().name)]",
        "accountName": "[concat('wvdsaas-autoAccount','-',variables('uniquestr'))]",
        "credentialName": "ManagementUXDeploy",
        "runbookName": "[concat('msftsaasbook','-',variables('uniquestr'))]",
        "scriptUri": "[concat(parameters('_artifactsLocation'),'scripts/New-WVDMgmtSetup.ps1')]",
        "automationVariables": [
            {
                "name": "subscriptionid",
                "value": "[concat('\"',subscription().subscriptionId,'\"')]"
            },
            {
                "name": "webApp",
                "value": "[concat('\"',parameters('ApplicationName'),'\"')]"
            },
            {
                "name": "apiApp",
                "value": "[concat('\"',variables('webAPIAppName'),'\"')]"
            },
            {
                "name": "resourceGroupName",
                "value": "[concat('\"',resourceGroup().name,'\"')]"
            },
            {
                "name": "Location",
                "value": "[concat('\"',resourceGroup().location,'\"')]"
            },
            {
                "name": "RDBrokerURL",
                "value": "[concat('\"',variables('RDBrokerURL'),'\"')]"
            },
            {
                "name": "ResourceURL",
                "value": "[concat('\"',variables('ResourceURL'),'\"')]"
            },
            {
                "name": "accountName",
                "value": "[concat('\"',variables('accountName'),'\"')]"
            },
            {
                "name": "fileURI",
                "value": "[concat('\"',parameters('_artifactsLocation'),'\"')]"
            }
        ],
        "uniqueBase": "[toLower(uniquestring(parameters('ApplicationName'), resourceGroup().id, deployment().name,variables('accountName')))]",
        "newGuid": "[guid(variables('uniqueBase'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-03-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('serviceplansku')]",
                "capacity": "[variables('workerSize')]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "condition": "[equals(parameters('isServicePrincipal'),bool('False'))]",
            "apiVersion": "2016-03-01",
            "name": "[variables('webAPIAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ],
            "kind": "api",
            "properties": {
                "serverFarmId": "[variables('hostingPlanName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "ApplicationId",
                            "value": "[parameters('AzureADUserPrincipalNameOrApplicationId')]"
                        },
                        {
                            "name": "ApplicationSecret",
                            "value": "[parameters('clientSecret')]"
                        },
                        {
                            "name": "RDBrokerUrl",
                            "value": "[variables('rdBrokerURL')]"
                        },
                        {
                            "name": "ResourceUrl",
                            "value": "[variables('resourceURL')]"
                        },
                        {
                            "name": "RedirectURI",
                            "value": "[concat('https://',parameters('ApplicationName'),'.azurewebsites.net/')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2015-08-01",
                    "name": "MSDeploy",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('webAPIAppName'))]"
                    ],
                    "properties": {
                        "packageUri": "[variables('webApiPackageURL')]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-03-01",
            "condition": "[equals(parameters('isServicePrincipal'),bool('False'))]",
            "name": "[parameters('ApplicationName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[concat('Microsoft.Web/sites/', variables('webAPIAppName'), '/extensions/MSDeploy')]"
            ],
            "kind": "app",
            "properties": {
                "serverFarmId": "[variables('hostingPlanName')]"
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2015-08-01",
                    "name": "MSDeploy",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('ApplicationName'))]"
                    ],
                    "properties": {
                        "packageUri": "[variables('webApplicationPackageURL')]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "condition": "[equals(parameters('isServicePrincipal'),bool('False'))]",
            "name": "[parameters('ApplicationName')]",
            "kind": "app",
            "apiVersion": "2016-03-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "serverFarmId": "[variables('hostingPlanName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "condition": "[equals(parameters('isServicePrincipal'),bool('False'))]",
            "name": "[variables('webAPIAppName')]",
            "kind": "api",
            "apiVersion": "2016-03-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "serverFarmId": "[variables('hostingPlanName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "condition": "[equals(parameters('isServicePrincipal'),bool('False'))]",
            "name": "[concat(variables('accountname'), '/', variables('automationVariables')[copyIndex()].name)]",
            "apiVersion": "2015-10-31",
            "copy": {
                "name": "variableLoop",
                "count": "[length(variables('automationVariables'))]"
            },
            "tags": {},
            "properties": {
                "value": "[variables('automationVariables')[copyIndex()].value]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('accountname'))]",
                "[resourceId('Microsoft.Web/Sites', parameters('ApplicationName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Web/Sites', variables('webAPIAppName'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts",
            "condition": "[equals(parameters('isServicePrincipal'),bool('False'))]",
            "name": "[variables('accountName')]",
            "apiVersion": "2015-01-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', parameters('ApplicationName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Web/Sites', variables('webAPIAppName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "[variables('sku')]"
                }
            },
            "resources": [
                {
                    "type": "runbooks",
                    "name": "[variables('runbookName')]",
                    "apiVersion": "2015-01-01-preview",
                    "location": "[resourceGroup().location]",
                    "tags": {},
                    "properties": {
                        "runbookType": "PowerShell",
                        "logProgress": "false",
                        "logVerbose": "false",
                        "publishContentLink": {
                            "uri": "[variables('scriptUri')]",
                            "version": "1.0.0.0"
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('accountName'))]",
                        "[resourceId('Microsoft.Web/Sites', parameters('ApplicationName'))]",
                        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                        "[resourceId('Microsoft.Web/Sites', variables('webAPIAppName'))]"
                    ]
                },
                {
                    "type": "credentials",
                    "name": "[variables('credentialName')]",
                    "apiVersion": "2015-01-01-preview",
                    "location": "[resourceGroup().location]",
                    "tags": {},
                    "properties": {
                        "userName": "[parameters('AzureADUserPrincipalNameOrApplicationId')]",
                        "password": "[parameters('AzureAdminPassword')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('accountName'))]",
                        "[resourceId('Microsoft.Web/Sites', parameters('ApplicationName'))]",
                        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                        "[resourceId('Microsoft.Web/Sites', variables('webAPIAppName'))]"
                    ]
                },
                {
                    "type": "jobs",
                    "name": "[variables('newGuid')]",
                    "apiVersion": "2015-01-01-preview",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "key": "value"
                    },
                    "properties": {
                        "runbook": {
                            "name": "[variables('runbookName')]"
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('accountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('accountName'), '/runbooks/',variables('runbookName'))]",
                        "[resourceId('Microsoft.Web/Sites', parameters('ApplicationName'))]",
                        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                        "[resourceId('Microsoft.Web/Sites', variables('webAPIAppName'))]"
                    ]
                }
            ]
        }
    ]
}